 OPERATOR(#)  KEYWORD(include)  OPERATOR(<)  ID(stdio.h)  OPERATOR(>) 
 OPERATOR(#)  KEYWORD(include)  OPERATOR(<)  ID(string.h)  OPERATOR(>) 
 OPERATOR(#)  KEYWORD(include)  OPERATOR(<)  ID(malloc.h)  OPERATOR(>) 
 OPERATOR(#)  KEYWORD(include)  OPERATOR(<)  ID(ctype.h)  OPERATOR(>) 
 KEYWORD(char)  OPERATOR(*)  OPERATOR(*) 
 ID(token_table)  PUNCT(;) 
 KEYWORD(char) 
 ID(buf)  LPAR('[')  ID(256)  RPAR(']')  PUNCT(;) 
 KEYWORD(void) 
 ID(process_token)  LPAR('(')  KEYWORD(char)  OPERATOR(*) 
 ID(str)  RPAR(')')  PUNCT(;) 
 KEYWORD(int) 
 ID(is_keyword)  LPAR('(')  KEYWORD(char)  OPERATOR(*) 
 ID(str)  RPAR(')')  PUNCT(;) 
 KEYWORD(int) 
 ID(main)  LPAR('(')  RPAR(')')  LPAR('{') 
 ID(FILE)  OPERATOR(*) 
 ID(handle_r)  PUNCT(,)  OPERATOR(*)  ID(handle_w)  PUNCT(;) 
 ID(handle_r) 
 OPERATOR(=) 
 ID(fopen)  LPAR('(')  ID("tokeniser1.c")  PUNCT(,)  ID("r")  RPAR(')')  PUNCT(;) 
 KEYWORD(while)  LPAR('(')  ID(fgets)  LPAR('(')  ID(buf)  PUNCT(,)  ID(256)  PUNCT(,)  ID(handle_r)  RPAR(')')  OPERATOR(=)  ID(NULL)  RPAR(')')  LPAR('{') 
 KEYWORD(char)  OPERATOR(*) 
 ID(tok)  PUNCT(;) 
 ID(tok) 
 OPERATOR(=) 
 ID(strtok)  LPAR('(')  ID(buf)  PUNCT(,)  ID(") 
 ID(nt")  RPAR(')')  PUNCT(;) 
 KEYWORD(while)  LPAR('(')  ID(tok)  OPERATOR(=)  ID(NULL)  RPAR(')')  LPAR('{') 
 ID(process_token)  LPAR('(')  ID(tok)  RPAR(')')  PUNCT(;) 
 ID(printf)  LPAR('(')  ID("n")  RPAR(')')  PUNCT(;) 
 OPERATOR(/)  OPERATOR(/) 
 ID(printf)  LPAR('(')  ID(")  OPERATOR(%)  ID(s")  PUNCT(,)  ID(tok)  RPAR(')')  PUNCT(;) 
 ID(tok) 
 OPERATOR(=) 
 ID(strtok)  LPAR('(')  ID(NULL)  PUNCT(,)  ID(") 
 ID(nt")  RPAR(')')  PUNCT(;) 
 RPAR('}') 
 RPAR('}') 
 KEYWORD(return) 
 ID(0)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(void) 
 ID(process_token)  LPAR('(')  KEYWORD(char)  OPERATOR(*) 
 ID(str)  RPAR(')')  LPAR('{') 
 KEYWORD(if)  LPAR('(')  ID(str)  LPAR('[')  ID(0)  RPAR(']')  OPERATOR(==)  ID(0)  RPAR(')')  LPAR('{') 
 KEYWORD(return)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 KEYWORD(if)  LPAR('(')  ID(is_keyword)  LPAR('(')  ID(str)  RPAR(')')  RPAR(')')  LPAR('{') 
 ID(printf)  LPAR('(')  ID(") 
 ID(KEYWORD)  LPAR('(')  OPERATOR(%)  ID(s)  RPAR(')') 
 ID(")  PUNCT(,)  ID(str)  RPAR(')')  PUNCT(;) 
 KEYWORD(return)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 LPAR('{') 
 KEYWORD(int) 
 ID(i)  OPERATOR(=)  ID(0)  PUNCT(,)  ID(j)  OPERATOR(=)  ID(0)  PUNCT(;) 
 KEYWORD(char) 
 ID(expr)  LPAR('[')  ID(50)  RPAR(']')  PUNCT(;) 
 KEYWORD(while)  LPAR('(')  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(=)  ID(0)  RPAR(')')  LPAR('{') 
 KEYWORD(if)  LPAR('(')  ID(isalpha)  LPAR('(')  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  OPERATOR(||)  ID(isdigit)  LPAR('(')  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  OPERATOR(||)  ID(strchr)  LPAR('(')  ID("$@_.")  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  OPERATOR(=)  ID(NULL)  OPERATOR(||)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  ID(")  RPAR(')')  LPAR('{') 
 ID(expr)  LPAR('[')  ID(j)  OPERATOR(++)  RPAR(']') 
 OPERATOR(=) 
 ID(str)  LPAR('[')  ID(i)  RPAR(']')  PUNCT(;) 
 RPAR('}') 
 KEYWORD(if)  LPAR('(')  ID(strchr)  LPAR('(')  ID(")  OPERATOR(+)  OPERATOR(-)  OPERATOR(*)  OPERATOR(%)  OPERATOR(^)  OPERATOR(/)  OPERATOR(&=)  OPERATOR(|)  OPERATOR(~)  OPERATOR(>)  OPERATOR(<)  OPERATOR(#)  ID(")  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  OPERATOR(=)  ID(NULL)  RPAR(')')  LPAR('{') 
 ID(expr)  LPAR('[')  ID(j)  OPERATOR(++)  RPAR(']') 
 OPERATOR(=)  ID(0)  PUNCT(;) 
 ID(j)  OPERATOR(=)  ID(0)  PUNCT(;) 
 ID(process_token)  LPAR('(')  ID(expr)  RPAR(')')  PUNCT(;) 
 KEYWORD(if)  LPAR('(')  ID(strchr)  LPAR('(')  ID(")  OPERATOR(<)  OPERATOR(>)  OPERATOR(=)  OPERATOR(&)  OPERATOR(|)  OPERATOR(+)  OPERATOR(-)  ID(")  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  OPERATOR(=)  ID(NULL)  OPERATOR(&&)  ID(str)  LPAR('[')  ID(i)  OPERATOR(+)  ID(1)  RPAR(']')  OPERATOR(==)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  LPAR('{') 
 ID(printf)  LPAR('(')  ID(") 
 ID(OPERATOR)  LPAR('(')  OPERATOR(%)  ID(c)  OPERATOR(%)  ID(c)  RPAR(')') 
 ID(")  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  OPERATOR(+)  ID(1)  RPAR(']')  RPAR(')')  PUNCT(;) 
 ID(i)  OPERATOR(++)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 KEYWORD(if)  LPAR('(')  ID(strchr)  LPAR('(')  ID(")  OPERATOR(+)  OPERATOR(/)  OPERATOR(*)  OPERATOR(%)  OPERATOR(-)  OPERATOR(|)  OPERATOR(&)  OPERATOR(^)  OPERATOR(~)  ID(")  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  OPERATOR(=)  ID(NULL)  OPERATOR(&&)  ID(str)  LPAR('[')  ID(i)  OPERATOR(+)  ID(1)  RPAR(']')  OPERATOR(==)  OPERATOR(=)  RPAR(')')  LPAR('{') 
 ID(printf)  LPAR('(')  ID(") 
 ID(OPERATOR)  LPAR('(')  OPERATOR(%)  ID(c)  OPERATOR(%)  ID(c)  RPAR(')') 
 ID(")  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  OPERATOR(+)  ID(1)  RPAR(']')  RPAR(')')  PUNCT(;) 
 ID(i)  OPERATOR(++)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else)  LPAR('{') 
 ID(printf)  LPAR('(')  ID(") 
 ID(OPERATOR)  LPAR('(')  OPERATOR(%)  ID(c)  RPAR(')') 
 ID(")  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  PUNCT(;) 
 RPAR('}') 
 RPAR('}') 
 KEYWORD(if)  LPAR('(')  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  LPAR('(')  OPERATOR(||)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  LPAR('[')  OPERATOR(||)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  LPAR('{')  RPAR(')')  LPAR('{') 
 ID(expr)  LPAR('[')  ID(j)  OPERATOR(++)  RPAR(']') 
 OPERATOR(=) 
 ID(0)  PUNCT(;) 
 ID(j)  OPERATOR(=)  ID(0)  PUNCT(;) 
 ID(process_token)  LPAR('(')  ID(expr)  RPAR(')')  PUNCT(;) 
 ID(printf)  LPAR('(')  ID(") 
 ID(LPAR)  LPAR('(')  OPERATOR(%)  ID(c)  RPAR(')') 
 ID(")  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  PUNCT(;) 
 RPAR('}') 
 KEYWORD(if)  LPAR('(')  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  RPAR(')')  OPERATOR(||)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  RPAR(']')  OPERATOR(||)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  RPAR('}')  RPAR(')')  LPAR('{') 
 ID(expr)  LPAR('[')  ID(j)  OPERATOR(++)  RPAR(']') 
 OPERATOR(=) 
 ID(0)  PUNCT(;) 
 ID(j)  OPERATOR(=)  ID(0)  PUNCT(;) 
 ID(process_token)  LPAR('(')  ID(expr)  RPAR(')')  PUNCT(;) 
 ID(printf)  LPAR('(')  ID(") 
 ID(RPAR)  LPAR('(')  OPERATOR(%)  ID(c)  RPAR(')') 
 ID(")  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  PUNCT(;) 
 RPAR('}') 
 KEYWORD(if)  LPAR('(')  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  PUNCT(;)  OPERATOR(||)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  PUNCT(,)  OPERATOR(||)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  PUNCT(?)  OPERATOR(||)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  OPERATOR(==)  PUNCT(:)  RPAR(')')  LPAR('{') 
 ID(expr)  LPAR('[')  ID(j)  OPERATOR(++)  RPAR(']') 
 OPERATOR(=) 
 ID(0)  PUNCT(;) 
 ID(j)  OPERATOR(=)  ID(0)  PUNCT(;) 
 ID(process_token)  LPAR('(')  ID(expr)  RPAR(')')  PUNCT(;) 
 ID(printf)  LPAR('(')  ID(") 
 ID(PUNCT)  LPAR('(')  OPERATOR(%)  ID(c)  RPAR(')') 
 ID(")  PUNCT(,)  ID(str)  LPAR('[')  ID(i)  RPAR(']')  RPAR(')')  PUNCT(;) 
 RPAR('}') 
 ID(i)  OPERATOR(++)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(if)  LPAR('(')  ID(j)  OPERATOR(>)  OPERATOR(=)  ID(0)  OPERATOR(&&)  ID(j)  OPERATOR(==)  ID(i)  RPAR(')')  LPAR('{') 
 ID(expr)  LPAR('[')  ID(j)  OPERATOR(++)  RPAR(']') 
 OPERATOR(=) 
 ID(0)  PUNCT(;) 
 ID(printf)  LPAR('(')  ID(") 
 ID(ID)  LPAR('(')  OPERATOR(%)  ID(s)  RPAR(')') 
 ID(")  PUNCT(,)  ID(str)  RPAR(')')  PUNCT(;) 
 KEYWORD(return)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(if)  LPAR('(')  ID(j)  OPERATOR(>)  OPERATOR(=)  ID(0)  OPERATOR(&&)  ID(j)  OPERATOR(<)  ID(i)  OPERATOR(-)  ID(1)  RPAR(')')  LPAR('{') 
 ID(expr)  LPAR('[')  ID(j)  OPERATOR(++)  RPAR(']')  OPERATOR(=)  ID(0)  PUNCT(;) 
 ID(process_token)  LPAR('(')  ID(expr)  RPAR(')')  PUNCT(;) 
 RPAR('}') 
 RPAR('}') 
 RPAR('}') 
 KEYWORD(int) 
 ID(is_keyword)  LPAR('(')  KEYWORD(char)  OPERATOR(*) 
 ID(str)  RPAR(')')  LPAR('{') 
 KEYWORD(int) 
 ID(ret)  OPERATOR(=)  ID(0)  PUNCT(;) 
 KEYWORD(if)  LPAR('(')  ID(strcmp)  LPAR('(')  ID("if")  PUNCT(,)  ID(str)  RPAR(')')  OPERATOR(==)  ID(0)  RPAR(')')  LPAR('{') 
 ID(ret) 
 OPERATOR(=)  ID(1)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 KEYWORD(if)  LPAR('(')  ID(strcmp)  LPAR('(')  ID("for")  PUNCT(,)  ID(str)  RPAR(')')  OPERATOR(==)  ID(0)  RPAR(')')  LPAR('{') 
 ID(ret)  OPERATOR(=)  ID(1)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 KEYWORD(if)  LPAR('(')  ID(strcmp)  LPAR('(')  ID("while")  PUNCT(,)  ID(str)  RPAR(')')  OPERATOR(==)  ID(0)  RPAR(')')  LPAR('{') 
 ID(ret) 
 OPERATOR(=) 
 ID(1)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 KEYWORD(if)  LPAR('(')  ID(strcmp)  LPAR('(')  ID("void")  PUNCT(,)  ID(str)  RPAR(')')  OPERATOR(==)  ID(0)  RPAR(')')  LPAR('{') 
 ID(ret)  OPERATOR(=)  ID(1)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 KEYWORD(if)  LPAR('(')  ID(strcmp)  LPAR('(')  ID("char")  PUNCT(,)  ID(str)  RPAR(')')  OPERATOR(==)  ID(0)  RPAR(')')  LPAR('{') 
 ID(ret)  OPERATOR(=)  ID(1)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 KEYWORD(if)  LPAR('(')  ID(strcmp)  LPAR('(')  ID("int")  PUNCT(,)  ID(str)  RPAR(')')  OPERATOR(==)  ID(0)  RPAR(')')  LPAR('{') 
 ID(ret)  OPERATOR(=)  ID(1)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 KEYWORD(if)  LPAR('(')  ID(strcmp)  LPAR('(')  ID("return")  PUNCT(,)  ID(str)  RPAR(')')  OPERATOR(==)  ID(0)  RPAR(')')  LPAR('{') 
 ID(ret)  OPERATOR(=)  ID(1)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 KEYWORD(if)  LPAR('(')  ID(strcmp)  LPAR('(')  ID("include")  PUNCT(,)  ID(str)  RPAR(')')  OPERATOR(==)  ID(0)  RPAR(')')  LPAR('{') 
 ID(ret)  OPERATOR(=)  ID(1)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else) 
 KEYWORD(if)  LPAR('(')  ID(strcmp)  LPAR('(')  ID("else")  PUNCT(,)  ID(str)  RPAR(')')  OPERATOR(==)  ID(0)  RPAR(')')  LPAR('{') 
 ID(ret)  OPERATOR(=)  ID(1)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(else)  LPAR('{') 
 ID(ret) 
 OPERATOR(=)  ID(0)  PUNCT(;) 
 RPAR('}') 
 KEYWORD(return) 
 ID(ret)  PUNCT(;) 
 RPAR('}') 
